// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============= Auth Models =============
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// ============= User Model =============
model User {
  id            String         @id @default(uuid())
  name          String?
  email         String        @unique
  emailVerified DateTime?
  image         String?
  password      String?
  
  // Auth relations
  accounts      Account[]
  sessions      Session[]
  
  // App relations
  cartItems     CartItem[]
  favoriteItems FavoriteItem[]
}

// ============= Product Models =============
model Product {
  id             String         @id @default(uuid())
  name           String
  slug           String         @unique
  size           String?
  quantity       Int?
  category       String
  image          String
  price          Decimal        @db.Decimal(10, 2)
  description    String
  rating         Float
  
  // Relations
  cartItems      CartItem[]
  favoriteItems  FavoriteItem[]
}

// ============= Shopping Models =============
model CartItem {
  id        String  @id @default(uuid())
  quantity  Int     
  
  // Relations
  product   Product @relation(fields: [productId], references: [id])
  productId String
  user      User    @relation(fields: [userId], references: [id])
  userId    String

  @@unique([productId, userId])
}

model FavoriteItem {
  id        String  @id @default(uuid())
  
  // Relations
  product   Product @relation(fields: [productId], references: [id])
  productId String
  user      User    @relation(fields: [userId], references: [id])
  userId    String

  @@unique([productId, userId])
}